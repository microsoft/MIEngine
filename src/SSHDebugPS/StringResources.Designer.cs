//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.SSHDebugPS {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class StringResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal StringResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.SSHDebugPS.StringResources", typeof(StringResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting to the remote system failed due to authentication failure. Enter your updated connection info and try connecting again..
        /// </summary>
        internal static string AuthenticationFailureDescription {
            get {
                return ResourceManager.GetString("AuthenticationFailureDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication Failure.
        /// </summary>
        internal static string AuthenticationFailureHeader {
            get {
                return ResourceManager.GetString("AuthenticationFailureHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Command &apos;{0}&apos; failed with code &apos;{1}&apos;. {2}&quot;.
        /// </summary>
        internal static string CommandFailedMessageFormat {
            get {
                return ResourceManager.GetString("CommandFailedMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft-SSHPortSupplier-FileCopy-.
        /// </summary>
        internal static string CopyFile_TempFilePrefix {
            get {
                return ResourceManager.GetString("CopyFile_TempFilePrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Docker (Linux Container) connection type allows Visual Studio to connect to Docker containers running locally or remotely (using SSH)..
        /// </summary>
        internal static string Docker_PSDescription {
            get {
                return ResourceManager.GetString("Docker_PSDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Docker (Linux Container).
        /// </summary>
        internal static string Docker_PSName {
            get {
                return ResourceManager.GetString("Docker_PSName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command failed to execute.
        /// </summary>
        internal static string Error_CommandFailed {
            get {
                return ResourceManager.GetString("Error_CommandFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection string provided is not formatted properly..
        /// </summary>
        internal static string Error_ContainerConnectionStringInvalidMessage {
            get {
                return ResourceManager.GetString("Error_ContainerConnectionStringInvalidMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection string format invalid..
        /// </summary>
        internal static string Error_ContainerConnectionStringInvalidTitle {
            get {
                return ResourceManager.GetString("Error_ContainerConnectionStringInvalidTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Container &apos;{0}&apos; is not in the list of running containers..
        /// </summary>
        internal static string Error_ContainerUnavailableMessage {
            get {
                return ResourceManager.GetString("Error_ContainerUnavailableMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Container unavailable..
        /// </summary>
        internal static string Error_ContainerUnavailableTitle {
            get {
                return ResourceManager.GetString("Error_ContainerUnavailableTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source file &apos;{0}&apos; not found..
        /// </summary>
        internal static string Error_CopyFile_SourceNotFound {
            get {
                return ResourceManager.GetString("Error_CopyFile_SourceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to copy files..
        /// </summary>
        internal static string Error_CopyFileFailed {
            get {
                return ResourceManager.GetString("Error_CopyFileFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to parse json &apos;{0}&apos;.\r\nError: &apos;{1}&apos;.
        /// </summary>
        internal static string Error_DockerPSParseFailed {
            get {
                return ResourceManager.GetString("Error_DockerPSParseFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ensure the selected Docker Connection target is a Linux container..
        /// </summary>
        internal static string Error_EnsureDockerContainerIsLinux {
            get {
                return ResourceManager.GetString("Error_EnsureDockerContainerIsLinux", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to parse exit code..
        /// </summary>
        internal static string Error_ExitCodeNotParseable {
            get {
                return ResourceManager.GetString("Error_ExitCodeNotParseable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified directory {0} could not be created or accessed..
        /// </summary>
        internal static string Error_InvalidDirectory {
            get {
                return ResourceManager.GetString("Error_InvalidDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation timed out..
        /// </summary>
        internal static string Error_OperationTimedOut {
            get {
                return ResourceManager.GetString("Error_OperationTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to list processes..
        /// </summary>
        internal static string Error_ProcessListFailedTitle {
            get {
                return ResourceManager.GetString("Error_ProcessListFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parsing &apos;/proc&apos; for process list failed. 
        ///Error:
        ///&apos;{0}&apos;.
        /// </summary>
        internal static string Error_ProcFSError {
            get {
                return ResourceManager.GetString("Error_ProcFSError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;ps&apos; command failed with exit code &apos;{0}&apos;. 
        ///Error:
        ///&apos;{1}&apos;.
        /// </summary>
        internal static string Error_PSErrorFormat {
            get {
                return ResourceManager.GetString("Error_PSErrorFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to obtain process list..
        /// </summary>
        internal static string Error_PSFailed {
            get {
                return ResourceManager.GetString("Error_PSFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;ps&apos; command missing..
        /// </summary>
        internal static string Error_PSMissing {
            get {
                return ResourceManager.GetString("Error_PSMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot process command. Connection is not open..
        /// </summary>
        internal static string Error_ShellNotRunning {
            get {
                return ResourceManager.GetString("Error_ShellNotRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source file &apos;{0}&apos; not found.
        /// </summary>
        internal static string Error_SourceFileNotFound {
            get {
                return ResourceManager.GetString("Error_SourceFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to enumerate installed GNU/Linux distributions. wsl.exe exited with code {0} (0x{0:X8}). More information may be available in the output window..
        /// </summary>
        internal static string Error_WSLEnumDistrosFailed_Args1 {
            get {
                return ResourceManager.GetString("Error_WSLEnumDistrosFailed_Args1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0} {1}&apos; failed and wrote the following text to standard error:.
        /// </summary>
        internal static string Error_WSLExecErrorOut_Args2 {
            get {
                return ResourceManager.GetString("Error_WSLExecErrorOut_Args2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to use the Windows Subsystem for Linux (WSL) transport. No GNU/Linux distributions are installed..
        /// </summary>
        internal static string Error_WSLNoDistros {
            get {
                return ResourceManager.GetString("Error_WSLNoDistros", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Subsystem for Linux (WSL) is not installed on this computer..
        /// </summary>
        internal static string Error_WSLNotInstalled {
            get {
                return ResourceManager.GetString("Error_WSLNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter credentials to connect to {0}.
        /// </summary>
        internal static string HeaderTextFormat {
            get {
                return ResourceManager.GetString("HeaderTextFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accept Host Key.
        /// </summary>
        internal static string HostKeyCaption {
            get {
                return ResourceManager.GetString("HostKeyCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;hostname&gt;.
        /// </summary>
        internal static string HostName_PlaceHolder {
            get {
                return ResourceManager.GetString("HostName_PlaceHolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The authenticity of the host &apos;{0}&apos; needs to be established.
        ///
        ///&apos;{1}&apos; key fingerprint is &apos;{2}&apos;. 
        ///
        ///Would you like to continue connecting?.
        /// </summary>
        internal static string NewHostKeyMessage {
            get {
                return ResourceManager.GetString("NewHostKeyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;unknown&gt;.
        /// </summary>
        internal static string ProcessName_Unknown {
            get {
                return ResourceManager.GetString("ProcessName_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSH (Secure Shell) Transport allows connecting Visual Studio to computers running an SSH server with a bash-like shell (ex: Linux, macOS, etc)..
        /// </summary>
        internal static string SSH_PSDescription {
            get {
                return ResourceManager.GetString("SSH_PSDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Transport.
        /// </summary>
        internal static string TransportTitle_Args1 {
            get {
                return ResourceManager.GetString("TransportTitle_Args1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;username&gt;.
        /// </summary>
        internal static string UserName_PlaceHolder {
            get {
                return ResourceManager.GetString("UserName_PlaceHolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting to {0}....
        /// </summary>
        internal static string WaitingOp_Connecting {
            get {
                return ResourceManager.GetString("WaitingOp_Connecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enumerating installed GNU/Linux distributions....
        /// </summary>
        internal static string WaitingOp_EnumeratingWSLDistros {
            get {
                return ResourceManager.GetString("WaitingOp_EnumeratingWSLDistros", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running command &apos;{0}&apos; on the remote system....
        /// </summary>
        internal static string WaitingOp_ExecutingCommand {
            get {
                return ResourceManager.GetString("WaitingOp_ExecutingCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running ps on the remote system....
        /// </summary>
        internal static string WaitingOp_ExecutingPS {
            get {
                return ResourceManager.GetString("WaitingOp_ExecutingPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Obtaining user&apos;s home directory path from remote system....
        /// </summary>
        internal static string WaitingOp_HomeDirectory {
            get {
                return ResourceManager.GetString("WaitingOp_HomeDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating directory on remote system....
        /// </summary>
        internal static string WaitingOp_MakeDirectory {
            get {
                return ResourceManager.GetString("WaitingOp_MakeDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Windows Subsystem for Linux (WSL) connection type allows Visual Studio to attach to local GNU/Linux processes..
        /// </summary>
        internal static string WSL_PSDescription {
            get {
                return ResourceManager.GetString("WSL_PSDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Subsystem for Linux (WSL).
        /// </summary>
        internal static string WSL_PSName {
            get {
                return ResourceManager.GetString("WSL_PSName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installed version of Windows Subsystem for Linux (WSL) is incompatible with Visual Studio&apos;s attach support. Please upgrade to WSL version 2 or newer..
        /// </summary>
        internal static string WSL_V2Required {
            get {
                return ResourceManager.GetString("WSL_V2Required", resourceCulture);
            }
        }
    }
}
