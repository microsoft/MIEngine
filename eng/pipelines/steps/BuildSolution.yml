# Restore and Build Solution
---
parameters:
  Solution: '$(Build.SourcesDirectory)\src\MIDebugEngine.sln'
  Configuration: 'Release'
  BuildArguments: ''
  OneESPT: false

steps:
- template: ../tasks/NuGetCommand.yml
  parameters:
    Command: 'restore'
    solution: ${{ parameters.Solution }}
    selectOrConfig: 'config'
    NugetConfigPath: '$(Build.SourcesDirectory)/src/.nuget/NuGet.config'

# If running under System.Debug (Enable system diagnostics), enable binlogs
- script: |
    if "%SYSTEM_DEBUG%" == "" (
      echo ##vso[task.setvariable variable=MsBuildArgsBinLog;]
    ) else (
      echo ##vso[task.setvariable variable=MsBuildArgsBinLog;]/bl:"$(Build.BinariesDirectory)/build_logs/${{ parameters.Configuration }}.binlog"
    )
  displayName: "Set MsBuildArgsBinLog variable"

- template: ../tasks/MSBuild.yml
  parameters:
    solution: ${{ parameters.Solution }}
    configuration: ${{ parameters.Configuration }}
    msbuildArguments: '${{ parameters.BuildArguments }} $(MsBuildArgsBinLog)'
    env: { 
      "SIGN_TYPE": "$(SignType)" 
    } 

- template: ../tasks/1ES/PublishPipelineArtifact.yml
  parameters:
    displayName: 'Publish binlogs'
    targetPath: '$(Build.BinariesDirectory)/build_logs/'
    artifactName: '${{ parameters.Configuration }}_binlog'
    condition: ne(variables['System.Debug'], '')
    OneESPT: ${{ parameters.OneESPT }}

- template: ../tasks/1ES/PublishPipelineArtifact.yml
  parameters:
    displayName: 'Publish debug binaries'
    targetPath: '$(Build.SourcesDirectory)\bin\${{ parameters.Configuration }}'
    artifactName: '${{ parameters.Configuration }}_debug_bin'
    condition: ne(variables['System.Debug'], '')
    OneESPT: ${{ parameters.OneESPT }}
...